name: Branch Protection

on:
  pull_request:
    branches: [ main ]

jobs:
  validate-pr:
    runs-on: ubuntu-latest
    
    steps:
    - name: Check PR title
      uses: amannn/action-semantic-pull-request@v5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        types: |
          feat
          fix
          docs
          style
          refactor
          test
          chore
        scopes: |
          core
          api
          infrastructure
          tests
          ci
        requireScope: false

  enforce-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore --configuration Release
    
    - name: Run tests with coverage
      run: dotnet test --no-build --configuration Release --collect:"XPlat Code Coverage" --results-directory ./coverage
    
    - name: Check test coverage
      run: |
        # This is a placeholder - you would typically use a tool like ReportGenerator
        # to parse coverage and enforce minimum thresholds
        echo "Checking test coverage..."
        find ./coverage -name "*.xml" | head -1
